"Genome assembly" = viral.packaging.anno$Genome.assembly,
"Genome coordinates" = gsub(",","", viral.packaging.anno$Genome.coordinates),
"Targeted cell population" = gsub("\n", "", viral.packaging.anno$Targeted.cell.population),
"Proximal gene" = viral.packaging.anno$Proximal.gene,
"TARS Targeted ROI" = "",
"Status" = "",
"On target" = "",
"Off target" = "",
"On target strength" = "",
"Off target region" = "",
"Validated population" = "",
"Celltype coverage" = "",
"Source" = "EnhancerVectorStatus",
"Signoff" = "",
"Share" = "",
"DREAM" = "",
"Notes" = viral.packaging.anno$Notes)
##
anno = read.xlsx("~/Desktop/enhancer_standards/EnhancerVectorStatus.xlsx", startRow=2, sheet="HGT Viral Packaging")
anno$id = paste0(anno$Full.plasmid.description, "-", anno$CN.ID)
enh.table.df$id = paste0(enh.table.df$Plasmid.long, "-", enh.table.df$Plasmid.original)
enh.table.df$Viral.prep.ID = gsub("\n", "", gsub("\t", "", anno[match(enh.table.df$id, anno$id),]$`VT#`))
enh.table.df$SYFP = ifelse(grepl("SYFP", enh.table.df$Plasmid.long), "Y", "")
##
enh.table.df$Genome.coordinates = gsub("\\..", "-", enh.table.df$Genome.coordinates)
enh.table.df$id = NULL
##
write.table(enh.table.df, file="~/Desktop/clean_tracker.tsv", sep="\t", row.names=F, quote=F)
library(dplyr)
library(openxlsx)
##
enhancer.table = read.table("~/Desktop/clean_tracker.tsv", sep="\t", quote="", header=T)
##
JT.table = read.xlsx("~/Desktop/enhancer_standards/summary of JT team RO testing for neocortical enhancers.xlsx", startRow=1)
JT.table = JT.table[-1,]
## Format into table
enh.table.df = data.frame("Enhancer ID" = JT.table[["Enh.ID"]],
"Plasmid original" = JT.table[["CN#"]],
"Plasmid short" = "",
"Plasmid long" = "",
"Viral prep ID" = JT.table[["batch"]],
"SYFP" = "",
"Injection route" = JT.table[["Viral.application"]],
"Primary screen region" = "",
"Species" = "",
"Genome assembly" = "",
"Genome coordinates" = "",
"Targeted cell population" = "",
"Proximal gene" = "",
"TARS Targeted ROI" = "",
"Status" = "",
"On target" = "",
"Off target" = "",
"On target strength" = "",
"Off target region" = "",
"Validated population" = "",
"Celltype coverage" = "",
"Source" = "JT tracker",
"Signoff" = "",
"Share" = "",
"DREAM" = "",
"Notes" = JT.table[["Expression.analysis"]],
"Notes2" = JT.table[["target.cell.type"]])
enh.table.df = enh.table.df[grepl("^CN", enh.table.df$Plasmid.original),]
enh.table.df = enh.table.df[!grepl("\\+", enh.table.df$Plasmid.original),]
enh.table.df$Plasmid.original = unlist(lapply(enh.table.df$Plasmid.original, function(x) substring(x,1,6)))
##
anno.JT.table = enhancer.table[match(enh.table.df$Plasmid.original, enhancer.table$Plasmid.original),]
enh.table.df$Enhancer.ID = anno.JT.table$Enhancer.ID
enh.table.df$Species = anno.JT.table$Species
enh.table.df$Genome.assembly = anno.JT.table$Genome.assembly
enh.table.df$Genome.coordinates = anno.JT.table$Genome.coordinates
enh.table.df$Proximal.gene = anno.JT.table$Proximal.gene
enh.table.df$Targeted.cell.population = anno.JT.table$Targeted.cell.population
##
missing.cn = setdiff(enh.table.df$Plasmid.original, enhancer.table$Plasmid.original)
enhancer.table$Notes2 = ""
enhancer.table = rbind(enhancer.table, enh.table.df[which(enh.table.df$Plasmid.original %in% missing.cn),])
write.xlsx(enhancer.table, file="~/Desktop/enhancer_vector_and_JT_cleaned.xlsx", overwrite = T)
str(enhancer.table)
enh.table.df
enh.table.df$Plasmid.long
enh.table.df$Plasmid.original
library(dplyr)
library(openxlsx)
##
enhancer.table = read.table("~/Desktop/clean_tracker.tsv", sep="\t", quote="", header=T)
##
JT.table = read.xlsx("~/Desktop/enhancer_standards/summary of JT team RO testing for neocortical enhancers.xlsx", startRow=1)
JT.table = JT.table[-1,]
## Format into table
enh.table.df = data.frame("Enhancer ID" = JT.table[["Enh.ID"]],
"Plasmid original" = JT.table[["CN#"]],
"Plasmid short" = "",
"Plasmid long" = "",
"Viral prep ID" = JT.table[["batch"]],
"SYFP" = "",
"Injection route" = JT.table[["Viral.application"]],
"Primary screen region" = "",
"Species" = "",
"Genome assembly" = "",
"Genome coordinates" = "",
"Targeted cell population" = "",
"Proximal gene" = "",
"TARS Targeted ROI" = "",
"Status" = "",
"On target" = "",
"Off target" = "",
"On target strength" = "",
"Off target region" = "",
"Validated population" = "",
"Celltype coverage" = "",
"Source" = "JT tracker",
"Signoff" = "",
"Share" = "",
"DREAM" = "",
"Notes" = JT.table[["Expression.analysis"]],
"Notes2" = JT.table[["target.cell.type"]])
enh.table.df = enh.table.df[grepl("^CN", enh.table.df$Plasmid.original),]
enh.table.df = enh.table.df[!grepl("\\+", enh.table.df$Plasmid.original),]
enh.table.df$Plasmid.original = unlist(lapply(enh.table.df$Plasmid.original, function(x) substring(x,1,6)))
##
anno.JT.table = enhancer.table[match(enh.table.df$Plasmid.original, enhancer.table$Plasmid.original),]
enh.table.df$Enhancer.ID = anno.JT.table$Enhancer.ID
enh.table.df$Species = anno.JT.table$Species
enh.table.df$Genome.assembly = anno.JT.table$Genome.assembly
enh.table.df$Genome.coordinates = anno.JT.table$Genome.coordinates
enh.table.df$Proximal.gene = anno.JT.table$Proximal.gene
enh.table.df$Targeted.cell.population = anno.JT.table$Targeted.cell.population
##
missing.cn = setdiff(enh.table.df$Plasmid.original, enhancer.table$Plasmid.original)
enhancer.table$Notes2 = ""
enhancer.table = rbind(enhancer.table, enh.table.df[which(enh.table.df$Plasmid.original %in% missing.cn),])
write.xlsx(enhancer.table, file="~/Desktop/enhancer_vector_and_JT_cleaned.xlsx", overwrite = T)
str(enhancer.table)
## Format into table
enh.table.df = data.frame("Enhancer ID" = JT.table[["Enh.ID"]],
"Plasmid original" = JT.table[["CN#"]],
"Plasmid short" = "",
"Plasmid long" = "",
"Viral prep ID" = JT.table[["batch"]],
"SYFP" = "",
"Injection route" = JT.table[["Viral.application"]],
"Primary screen region" = "",
"Species" = "",
"Genome assembly" = "",
"Genome coordinates" = "",
"Targeted cell population" = "",
"Proximal gene" = "",
"TARS Targeted ROI" = "",
"Status" = "",
"On target" = "",
"Off target" = "",
"On target strength" = "",
"Off target region" = "",
"Validated population" = "",
"Celltype coverage" = "",
"Source" = "JT tracker",
"Signoff" = "",
"Share" = "",
"DREAM" = "",
"Notes" = JT.table[["Expression.analysis"]],
"Notes2" = JT.table[["target.cell.type"]])
library(dplyr)
library(openxlsx)
##
enhancer.table = read.table("~/Desktop/clean_tracker.tsv", sep="\t", quote="", header=T)
##
JT.table = read.xlsx("~/Desktop/enhancer_standards/summary of JT team RO testing for neocortical enhancers.xlsx", startRow=1)
JT.table = JT.table[-1,]
## Format into table
enh.table.df = data.frame("Enhancer ID" = JT.table[["Enh.ID"]],
"Plasmid original" = JT.table[["CN#"]],
"Plasmid short" = "",
"Plasmid long" = "",
"Viral prep ID" = JT.table[["batch"]],
"SYFP" = "",
"Injection route" = JT.table[["Viral.application"]],
"Primary screen region" = "",
"Species" = "",
"Genome assembly" = "",
"Genome coordinates" = "",
"Targeted cell population" = "",
"Proximal gene" = "",
"TARS Targeted ROI" = "",
"Status" = "",
"On target" = "",
"Off target" = "",
"On target strength" = "",
"Off target region" = "",
"Validated population" = "",
"Celltype coverage" = "",
"Source" = "JT tracker",
"Signoff" = "",
"Share" = "",
"DREAM" = "",
"Notes" = JT.table[["Expression.analysis"]],
"Notes2" = JT.table[["target.cell.type"]])
enh.table.df = enh.table.df[grepl("^CN", enh.table.df$Plasmid.original),]
enh.table.df = enh.table.df[!grepl("\\+", enh.table.df$Plasmid.original),]
enh.table.df$Plasmid.original = unlist(lapply(enh.table.df$Plasmid.original, function(x) substring(x,1,6)))
##
anno.JT.table = enhancer.table[match(enh.table.df$Plasmid.original, enhancer.table$Plasmid.original),]
enh.table.df$Enhancer.ID = anno.JT.table$Enhancer.ID
enh.table.df$Species = anno.JT.table$Species
enh.table.df$Genome.assembly = anno.JT.table$Genome.assembly
enh.table.df$Genome.coordinates = anno.JT.table$Genome.coordinates
enh.table.df$Proximal.gene = anno.JT.table$Proximal.gene
enh.table.df$Targeted.cell.population = anno.JT.table$Targeted.cell.population
##
missing.cn = setdiff(enh.table.df$Plasmid.original, enhancer.table$Plasmid.original)
enhancer.table$Notes2 = ""
enhancer.table = rbind(enhancer.table, enh.table.df[which(enh.table.df$Plasmid.original %in% missing.cn),])
write.xlsx(enhancer.table, file="~/Desktop/enhancer_vector_and_JT_cleaned.xlsx", overwrite = T)
tracker = read.xlsx("~/Desktop/Internal_enhancer_screening_coordination.xlsx", sheet="DREAM_Enhancer_selection")
tracker = read.xlsx("~/Desktop/Internal_enhancer_screening_coordination.xlsx", sheet="DREAM_Enhancer_selection")
tracker
str(tracker)
tracker %>% group_by(EnhancerID)
tracker %>%
group_by(EnhancerID) %>%
filter(n()>1)
enh.tracker$EnhancerID
##
enh.tracker = tracker %>%
group_by(EnhancerID) %>%
filter(n()>1)
enh.tracker$EnhancerID
##
for(enh in enh.tracker$EnhancerID){
if(grepl("eHGT", enh)){
enh.tracker$Plasmid.short = paste(tracker[tracker$EnhancerID == enh,]$Plasmid.short, collapse = " | ")
}
}
enh.tracker
enh.tracker$Plasmid.short
##
for(enh in enh.tracker$EnhancerID){
if(grepl("eHGT", enh)){
enh.tracker$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
}
}
enh.tracker
enh.tracker$Plasmid.short
enh.tracker$EnhancerID
##
for(enh in enh.tracker$EnhancerID){
print(enh)
if(grepl("eHGT", enh)){
enh.tracker$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
}
}
##
enh.tracker = tracker %>%
group_by(EnhancerID) %>%
filter(n()>1)
enh.tracker
tracker
##
enh.tracker = tracker %>%
distinct(EnhancerID)
enh.tracker
dim(enh.tracker)
dim(tracker)
##
for(enh in enh.tracker$EnhancerID){
print(enh)
if(grepl("eHGT", enh)){
enh.tracker$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
enh.tracker$Plasmid.original = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.original, collapse = " | ")
}
}
##
for(enh in enh.tracker$EnhancerID){
if(grepl("eHGT", enh)){
enh.tracker$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
enh.tracker$Plasmid.original = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.original, collapse = " | ")
}
}
enh.tracker
str(enh.tracker)
##
enh.tracker = tracker %>%
distinct(EnhancerID)
str(enh.tracker)
##
enh.tracker = tracker %>%
distinct(EnhancerID, .keep_all = TRUE)
##
for(enh in enh.tracker$EnhancerID){
if(grepl("eHGT", enh)){
enh.tracker$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
enh.tracker$Plasmid.original = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.original, collapse = " | ")
}
}
str(enh.tracker)
write.xlsx(enhancer.table, file="~/Desktop/enhancer_dream.xlsx", overwrite = T)
write.xlsx(enh.tracker, file="~/Desktop/enhancer_dream.xlsx", overwrite = T)
##
for(enh in enh.tracker$EnhancerID){
if(grepl("eHGT", enh)){
enh.tracker$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
enh.tracker$Plasmid.original = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.original, collapse = " | ")
}
}
enh.tracker$Plasmid.short
enh = "eHGT_001m"
tracker[which(tracker$EnhancerID == enh),]$Plasmid.short
paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
##
enh.tracker = tracker %>%
distinct(EnhancerID, .keep_all = TRUE)
##
for(enh in enh.tracker$EnhancerID){
if(grepl("eHGT", enh)){
enh.tracker[which(enh.tracker$EnhancerID == enh),]$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
enh.tracker[which(enh.tracker$EnhancerID == enh),]$Plasmid.original = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.original, collapse = " | ")
}
}
write.xlsx(enh.tracker, file="~/Desktop/enhancer_dream.xlsx", overwrite = T)
library(dplyr)
##
tracker = read.xlsx("~/Desktop/Internal_enhancer_screening_coordination.xlsx", sheet="Enhancer")
##
enh.tracker = tracker %>%
distinct(EnhancerID, .keep_all = TRUE)
library(dplyr)
##
tracker = read.xlsx("~/Desktop/Internal_enhancer_screening_coordination.xlsx", sheet="Enhancers")
##
enh.tracker = tracker %>%
distinct(EnhancerID, .keep_all = TRUE)
##
#for(enh in enh.tracker$EnhancerID){
#  if(grepl("eHGT", enh)){
#    enh.tracker[which(enh.tracker$EnhancerID == enh),]$Plasmid.short = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.short, collapse = " | ")
#    enh.tracker[which(enh.tracker$EnhancerID == enh),]$Plasmid.original = paste(tracker[which(tracker$EnhancerID == enh),]$Plasmid.original, collapse = " | ")
#  }
#}
write.xlsx(enh.tracker, file="~/Desktop/enhancer_dream.xlsx", overwrite = T)
shiny::runApp('Desktop/shiny_app_cs')
runApp('Desktop/shiny_app_cs')
runApp('Desktop/shiny_app_cs')
runApp()
runApp()
runApp('Desktop/shiny_app_cs')
runApp('Desktop/shiny_app_cs')
runApp('Desktop/shiny_app_cs')
enhancer.table = as.data.frame(read_tsv("~/Desktop/EVS.tsv"))
library(dplyr)
library(tidyverse)
enhancer.table = as.data.frame(read_tsv("~/Desktop/EVS.tsv"))
str(enhancer.table)
enhancer.table = as.data.frame(read_tsv("~/Desktop/EVS.tsv", skip = 1))
str(enhancer.table)
\\\
enhancer.table = enhancer.table[grep("^c", enhancer.table$`Genome coordinates`),]
dim(enhancer.table)
enhancer.table$`Genome coordinates` = gsub(" |,", "", enhancer.table$`Genome coordinates`)
enhancer.table = enhancer.table[-which(lapply(strsplit(enhancer.table$`Genome coordinates`, ":"), length) != 2),]
dim(enhancer.table)
enhancer.table = enhancer.table[grep("eHGT", enhancer.table$EnhancerID),]
##
seqs = strsplit(enhancer.table$`Genome coordinates`, ":")
chrs = unlist(lapply(seqs, "[[", 1))
range = unlist(lapply(seqs, "[[", 2))
range = strsplit(gsub(",","",range), "-")
start = unlist(lapply(range, "[[", 1))
end = unlist(lapply(range, "[[", 2))
library(dplyr)
library(tidyverse)
enhancer.table = as.data.frame(read_tsv("~/Desktop/EVS.tsv", skip = 1))
enhancer.table = enhancer.table[grep("^c", enhancer.table$`Genome coordinates`),]
enhancer.table$`Genome coordinates` = gsub(" |,", "", enhancer.table$`Genome coordinates`)
enhancer.table = enhancer.table[-which(lapply(strsplit(enhancer.table$`Genome coordinates`, ":"), length) != 2),]
enhancer.table = enhancer.table[grep("eHGT", enhancer.table$EnhancerID),]
##
seqs = strsplit(enhancer.table$`Genome coordinates`, ":")
chrs = unlist(lapply(seqs, "[[", 1))
range = unlist(lapply(seqs, "[[", 2))
range = strsplit(gsub(",","",range), "-")
start = unlist(lapply(range, "[[", 1))
end = unlist(lapply(range, "[[", 2))
##
bed = data.frame(chrs, start, end, enhancer.table$EnhancerID)
bed = bed[-grep("rh$", bed[,4]),]
bed
bed = data.frame(chrs, start, end, enhancer.table$EnhancerID)
enhancer.table$`HGT Enhancer ID`
library(dplyr)
library(tidyverse)
enhancer.table = as.data.frame(read_tsv("~/Desktop/EVS.tsv", skip = 1))
enhancer.table = enhancer.table[grep("^c", enhancer.table$`Genome coordinates`),]
enhancer.table$`Genome coordinates` = gsub(" |,", "", enhancer.table$`Genome coordinates`)
enhancer.table = enhancer.table[-which(lapply(strsplit(enhancer.table$`Genome coordinates`, ":"), length) != 2),]
enhancer.table$`HGT Enhancer ID`
library(dplyr)
library(tidyverse)
enhancer.table = as.data.frame(read_tsv("~/Desktop/EVS.tsv", skip = 1))
enhancer.table = enhancer.table[grep("^c", enhancer.table$`Genome coordinates`),]
enhancer.table$`Genome coordinates` = gsub(" |,", "", enhancer.table$`Genome coordinates`)
enhancer.table = enhancer.table[-which(lapply(strsplit(enhancer.table$`Genome coordinates`, ":"), length) != 2),]
enhancer.table = enhancer.table[grep("eHGT", enhancer.table$`HGT Enhancer ID`),]
##
seqs = strsplit(enhancer.table$`Genome coordinates`, ":")
chrs = unlist(lapply(seqs, "[[", 1))
range = unlist(lapply(seqs, "[[", 2))
range = strsplit(gsub(",","",range), "-")
start = unlist(lapply(range, "[[", 1))
end = unlist(lapply(range, "[[", 2))
enhancer.table$`HGT Enhancer ID`
library(dplyr)
library(tidyverse)
enhancer.table = as.data.frame(read_tsv("~/Desktop/EVS.tsv", skip = 1))
enhancer.table = enhancer.table[grep("^c", enhancer.table$`Genome coordinates`),]
enhancer.table$`Genome coordinates` = gsub(" |,", "", enhancer.table$`Genome coordinates`)
enhancer.table = enhancer.table[-which(lapply(strsplit(enhancer.table$`Genome coordinates`, ":"), length) != 2),]
enhancer.table = enhancer.table[grep("eHGT", enhancer.table$`HGT Enhancer ID`),]
seqs = strsplit(enhancer.table$`Genome coordinates`, ":")
seqs
chrs = unlist(lapply(seqs, "[[", 1))
range = unlist(lapply(seqs, "[[", 2))
range = strsplit(gsub(",","",range), "-")
start = unlist(lapply(range, "[[", 1))
end = unlist(lapply(range, "[[", 2))
chrs
range
library(dplyr)
library(tidyverse)
enhancer.table = as.data.frame(read_tsv("~/Desktop/EVS.tsv", skip = 1))
enhancer.table = enhancer.table[grep("^c", enhancer.table$`Genome coordinates`),]
enhancer.table$`Genome coordinates` = gsub(" |,", "", enhancer.table$`Genome coordinates`)
enhancer.table$`Genome coordinates` = gsub("..", "-", enhancer.table$`Genome coordinates`)
enhancer.table = enhancer.table[-which(lapply(strsplit(enhancer.table$`Genome coordinates`, ":"), length) != 2),]
enhancer.table = enhancer.table[grep("eHGT", enhancer.table$`HGT Enhancer ID`),]
##
seqs = strsplit(enhancer.table$`Genome coordinates`, ":")
chrs = unlist(lapply(seqs, "[[", 1))
range = unlist(lapply(seqs, "[[", 2))
range = strsplit(gsub(",","",range), "-")
start = unlist(lapply(range, "[[", 1))
end = unlist(lapply(range, "[[", 2))
##
bed = data.frame(chrs, start, end, enhancer.table$`HGT Enhancer ID`)
bed = bed[-grep("rh$", bed[,4]),]
bed
chrs
enhancer.table = as.data.frame(read_tsv("~/Desktop/EVS.tsv", skip = 1))
enhancer.table = enhancer.table[grep("^c", enhancer.table$`Genome coordinates`),]
enhancer.table$`Genome coordinates` = gsub(" |,", "", enhancer.table$`Genome coordinates`)
enhancer.table$`Genome coordinates` = gsub("..", "-", enhancer.table$`Genome coordinates`)
enhancer.table = enhancer.table[-which(lapply(strsplit(enhancer.table$`Genome coordinates`, ":"), length) != 2),]
enhancer.table = enhancer.table[grep("eHGT", enhancer.table$`HGT Enhancer ID`),]
##
seqs = strsplit(enhancer.table$`Genome coordinates`, ":")
chrs = unlist(lapply(seqs, "[[", 1))
range = unlist(lapply(seqs, "[[", 2))
range = strsplit(gsub(",","",range), "-")
start = unlist(lapply(range, "[[", 1))
end = unlist(lapply(range, "[[", 2))
enhancer.table
enhancer.table = as.data.frame(read_tsv("~/Desktop/EVS.tsv", skip = 1))
enhancer.table = enhancer.table[grep("^c", enhancer.table$`Genome coordinates`),]
enhancer.table$`Genome coordinates` = gsub(" |,", "", enhancer.table$`Genome coordinates`)
enhancer.table$`Genome coordinates` = gsub("..", "-", enhancer.table$`Genome coordinates`)
enhancer.table = enhancer.table[-which(lapply(strsplit(enhancer.table$`Genome coordinates`, ":"), length) != 2),]
#enhancer.table = enhancer.table[grep("eHGT", enhancer.table$`HGT Enhancer ID`),]
enhancer.table
enhancer.table = as.data.frame(read_tsv("~/Desktop/EVS.tsv", skip = 1))
enhancer.table = enhancer.table[grep("^c", enhancer.table$`Genome coordinates`),]
enhancer.table$`Genome coordinates` = gsub(" |,", "", enhancer.table$`Genome coordinates`)
enhancer.table$`Genome coordinates` = gsub("\\..", "-", enhancer.table$`Genome coordinates`)
enhancer.table = enhancer.table[-which(lapply(strsplit(enhancer.table$`Genome coordinates`, ":"), length) != 2),]
#enhancer.table = enhancer.table[grep("eHGT", enhancer.table$`HGT Enhancer ID`),]
enhancer.table
shiny::runApp('Desktop/shiny_app_cs')
runApp('Desktop/shiny_app_cs')
runApp('Desktop/shiny_app_cs')
library(devtools)
install_github("jokergoo/InteractiveComplexHeatmap")
3
runApp('Desktop/shiny_app_cs')
shiny::runApp('Desktop/shiny_app_cs')
install.packages(ComplexHeatmap)
install.packages('ComplexHeatmap')
install.packages("ComplexHeatmap")
install.packages("ComplexHeatmap")
library(ComplexHeatmap)
install_github("jokergoo/ComplexHeatmap")
library(devtools)
install_github("jokergoo/ComplexHeatmap")
shiny::runApp('Desktop/shiny_app_cs')
runApp('Desktop/shiny_app_cs')
runApp('Desktop/shiny_app_cs')
runApp('Desktop/shiny_app_cs')
runApp('Desktop/shiny_app_cs')
runApp('Desktop/shiny_app_cs')
runApp('Desktop/shiny_app_cs')
shiny::runApp('Desktop/shiny_app_cs')
shiny::runApp('Desktop/shiny_app_cs')
shiny::runApp('Desktop/shiny_app_cs')
shiny::runApp('Desktop/shiny_app_cs')
shiny::runApp('Desktop/shiny_app_cs')
runApp('Desktop/shiny_app_cs')
runApp('Desktop/shiny_app_cs')
getwd()
getwd("~/Desktop/shinymapR")
getwd("~/Desktop/shinymapR")
setwd("~/Desktop/shinymapR")
list.files()
setwd("~/Documents/GitHub/shinymapR/")
devtools::build_manual()
